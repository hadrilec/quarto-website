{
  "hash": "88be4abd14a7a646ecf2f6f08daef2c4",
  "result": {
    "markdown": "---\ntitle: \"Death and births\"\n---\n\n# Deaths and Births\n\nTo reproduce this example, you need to register to\nInsee's API and configure `pynsee`. Go check @sec-config for\ndetails.\n\n## Dependencies\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\nfrom pynsee.macrodata import get_dataset_list, get_series_list, get_series\n```\n:::\n\n\n## Feature engineering\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ninsee_data = get_dataset_list()\n\ndf_idbank = get_series_list(\"DECES-MORTALITE\", \"NAISSANCES-FECONDITE\")\n\ndf_idbank = df_idbank.loc[(df_idbank.FREQ == \"M\") & # monthly\n                          (df_idbank.REF_AREA == \"FM\") & # metropolitan France\n                          (df_idbank.DEMOGRAPHIE.isin([\"NAISS\",\"DECES\"]))] \n\n# get data\ndata = get_series(df_idbank.IDBANK)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nINSEE API credentials have not been found\nPlease try to reuse pynsee.utils.init_conn to save them locally\nOtherwise, you can still use environment variables as follow:\nimport os\nos.environ['insee_key'] = 'my_insee_key'\nos.environ['insee_secret'] = 'my_insee_secret'\n!!! Token missing, please check your credentials on api.insee.fr !!!\n!!! Please do the following to use your credentials : \n\ninit_conn(insee_key='my_insee_key', insee_secret='my_insee_secret')\n\n!!! If your token still does not work, please try to clear the cache :\n from pynsee.utils import clear_all_cache; clear_all_cache() !!!\n\nSDMX web service used instead of API\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:   0%|          | 0/215 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  33%|███▎      | 70/215 [00:00<00:00, 698.83it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  65%|██████▌   | 140/215 [00:00<00:00, 635.55it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  95%|█████████▍| 204/215 [00:00<00:00, 624.98it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list: 100%|██████████| 215/215 [00:00<00:00, 629.16it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n!!! Token missing, please check your credentials on api.insee.fr !!!\n!!! Please do the following to use your credentials : \n\ninit_conn(insee_key='my_insee_key', insee_secret='my_insee_secret')\n\n!!! If your token still does not work, please try to clear the cache :\n from pynsee.utils import clear_all_cache; clear_all_cache() !!!\n\nSDMX web service used instead of API\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series:   0%|          | 0/2 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series:  50%|█████     | 1/2 [00:01<00:01,  1.96s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series: 100%|██████████| 2/2 [00:04<00:00,  2.05s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series: 100%|██████████| 2/2 [00:04<00:00,  2.04s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nData has been cached\n\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndata['period'] = pd.cut(\n  pd.to_datetime(data['DATE']),\n  bins = pd.to_datetime(\n    ['1946-01-01', '1975-01-01', '2000-01-01', pd.Timestamp.today().normalize()]),\n  labels = ['1946-1975','1975-2000','2000-today']\n    )\n\nconditions = [data.IDBANK==\"000436391\", data.IDBANK==\"000436394\"]\nvalues = [\"Births\", \"Deaths\"]\ndata['color'] = np.select(conditions, values)\n```\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nsns.relplot(\n    data=data,\n    x = \"DATE\", y = \"OBS_VALUE\",\n    hue=\"color\", row=\"period\",\n    kind=\"line\", \n    facet_kws=dict(sharex=False),\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n<seaborn.axisgrid.FacetGrid at 0x7fc9e8f54be0>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](deaths_files/figure-html/cell-5-output-2.png){width=555 height=1427}\n:::\n:::\n\n\n## Prerequisite {#sec-config}\n\n- Subscribe to https://api.insee.fr/catalogue/ and get your credentials!\n- Save your credentials with `init_conn` function :\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Initialize key\nfrom pynsee.utils.init_conn import init_conn\n# init_conn(insee_key=\"my_insee_key\", insee_secret=\"my_insee_secret\")\n```\n:::\n\n\n- Beware : any change to the keys should be tested after having cleared the cache\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# clear registered keys\nfrom pynsee.utils import clear_all_cache; clear_all_cache()\n```\n:::\n\n\n",
    "supporting": [
      "deaths_files"
    ],
    "filters": [],
    "includes": {}
  }
}