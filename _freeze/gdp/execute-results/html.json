{
  "hash": "c0a8d8b0dba9813516f5ff58a11a17ed",
  "result": {
    "markdown": "---\ntitle: \"GDP Growth rate\"\n---\n\n# GDP growth rate\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Subscribe to api.insee.fr and get your credentials!\n# Save your credentials with init_conn function :\n# from pynsee.utils.init_conn import init_conn\n# init_conn(insee_key=\"my_insee_key\", insee_secret=\"my_insee_secret\")\n# Beware : any change to the keys should be tested after having cleared the cache\n# Please do : from pynsee.utils import clear_all_cache; clear_all_cache()\"\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom pynsee.macrodata import * \nimport pandas as pd\nimport matplotlib.ticker as ticker\n%matplotlib inline\nimport matplotlib.pyplot as plt\n# sphinx_gallery_thumbnail_path = 'examples/pictures/example_gdp_picture.png'\n# get macroeconomic datasets list\ninsee_dataset = get_dataset_list()\ninsee_dataset.head()\n# get series key (idbank), for Gross domestic product balance\nid = get_series_list(\"CNT-2014-PIB-EQB-RF\")\nid = id.loc[(id.FREQ == \"T\") &\n            (id.OPERATION == \"PIB\") &\n            (id.NATURE == \"TAUX\") &\n            (id.CORRECTION == \"CVS-CJO\")]\ndata = get_series(id.IDBANK)\n#data = split_title(df = data, n_split=2)\n# define plot\nax = data.plot(kind='bar', x=\"TIME_PERIOD\", stacked=True, y=\"OBS_VALUE\", figsize=(15,5))\n#add title\nplt.title(\"French GDP growth rate, quarter-on-quarter, sa-wda\")\n# customize x-axis tickers\nticklabels = ['']*len(data.TIME_PERIOD)\nticklabels[::12] = [item for item in data.TIME_PERIOD[::12]]\nax.xaxis.set_major_formatter(ticker.FixedFormatter(ticklabels))\nplt.gcf().autofmt_xdate()\n#remove legend\nax.get_legend().remove()\n#remove x-axistitle\nax.xaxis.label.set_visible(False)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nINSEE API credentials have not been found\nPlease try to reuse pynsee.utils.init_conn to save them locally\nOtherwise, you can still use environment variables as follow:\nimport os\nos.environ['insee_key'] = 'my_insee_key'\nos.environ['insee_secret'] = 'my_insee_secret'\n!!! Token missing, please check your credentials on api.insee.fr !!!\n!!! Please do the following to use your credentials : \n\ninit_conn(insee_key='my_insee_key', insee_secret='my_insee_secret')\n\n!!! If your token still does not work, please try to clear the cache :\n from pynsee.utils import clear_all_cache; clear_all_cache() !!!\n\nSDMX web service used instead of API\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:   0%|          | 0/215 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  30%|██▉       | 64/215 [00:00<00:00, 637.37it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  60%|█████▉    | 128/215 [00:00<00:00, 626.06it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list:  89%|████████▉ | 192/215 [00:00<00:00, 628.20it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\rGetting datasets list: 100%|██████████| 215/215 [00:00<00:00, 635.70it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n!!! Token missing, please check your credentials on api.insee.fr !!!\n!!! Please do the following to use your credentials : \n\ninit_conn(insee_key='my_insee_key', insee_secret='my_insee_secret')\n\n!!! If your token still does not work, please try to clear the cache :\n from pynsee.utils import clear_all_cache; clear_all_cache() !!!\n\nSDMX web service used instead of API\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series:   0%|          | 0/1 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series: 100%|██████████| 1/1 [00:00<00:00,  1.82it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r1/1 - Getting series: 100%|██████████| 1/1 [00:00<00:00,  1.81it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nData has been cached\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](gdp_files/figure-html/cell-3-output-14.png){width=1190 height=415}\n:::\n:::\n\n\n",
    "supporting": [
      "gdp_files"
    ],
    "filters": [],
    "includes": {}
  }
}